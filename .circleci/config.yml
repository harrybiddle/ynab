version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.10
    steps:
      - checkout
      - run:
          name: Download Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - restore_cache:
          keys:
            - dependencies-v1-{{ checksum "poetry.lock" }}
      - run:
          command: |
            pip install pip==20.0.2 poetry==1.0.2
            poetry install
      - save_cache:
          key: dependencies-v1-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs
      - run:
          command: poetry run flake8
      - run:
          command: poetry run black --check .
      - run:
          name: Check versions in sync
          command: |
            toml_version=$(grep '^version = ' pyproject.toml | grep -Po '\d+')
            ynab_version=$(grep -Po '\d+' ynab/__version__.py)
            if ! [ "${toml_version}" == "${ynab_version}" ]; then
              echo "Version mismatch"
              echo "\tVersion in pyproject.toml     : ${toml_version}"
              echo "\tVersion in ynab/__version__.py: ${ynab_version}"
            fi
      - run:
          name: Run tests and upload coverage report
          command: |
            ./cc-test-reporter before-build
            poetry run coverage run -m unittest discover
            poetry run coverage xml
            ./cc-test-reporter --coverage-input-type coverage.py after-build
